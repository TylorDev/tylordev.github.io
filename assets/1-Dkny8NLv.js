const e={coverImageSrc:"https://raw.githubusercontent.com/TylorDev/Tylordev/public/Assets/Images/51943d9b-5acb-4d33-9e33-411e58c76901.webp",category:"Experiment",date:"06/20/2024",title:"Communication between tabs",content:"localStorage",id:1},t="https://raw.githubusercontent.com/TylorDev/Tylordev/public/Assets/Images/85c76491-36ce-4fc5-bbd3-009a9b74fc9e.webp",a="Communicating multiple tabs in the same browser, without backend!",s=[{title:"Basic Concept",paragraph:"Local Storage is an HTML5 feature that allows data to be stored persistently in the user's browser. Unlike cookies, data in local storage is not sent to the server with each request, and it has a larger storage size (usually 5MB). To allow multiple tabs of the same web application to communicate with each other, the storage event can be used. This event is fired in all tabs when a change in local storage occurs.",image:"https://raw.githubusercontent.com/TylorDev/Tylordev/public/Assets/Images/616f5b05-17dc-47af-b087-61311d2e8790.webp"},{title:"Understanding the Process",paragraph:"Imagine you have a whiteboard (local storage) in a meeting room (the browser). Every time someone in the room (a tab) wants to share information with others, they write a message on the whiteboard. Everyone present in the room (other tabs) is watching the whiteboard. When someone writes something new, everyone else sees it and can react to that change.",image:""},{tittle:"",paragraph:"1. The Whiteboard (Local Storage): It is a space where any tab can write data. This data stays there until someone deletes or modifies it.",image:""},{tittle:"",paragraph:"2. People Watching (Browser Tabs): All open tabs of the same application are constantly watching the whiteboard for any changes.",image:""},{tittle:"",paragraph:"3. Change Event (storage): When someone writes on the whiteboard, everyone in the room receives an immediate notification that something has changed. In technical terms, this is the storage event.",image:""},{title:"Limitations",paragraph:"This communication between tabs using local storage only works within the same domain and browser, as different browsers do not share the same local storage. Additionally, data in local storage is not encrypted, so it is not secure to store sensitive information.",image:""},{title:"Process Steps",paragraph:"A tab writes a message in local storage using localStorage.setItem(key, value). This act of writing a message triggers the storage event in all tabs listening to this event. Each tab has an event listener for the storage event. This listener detects any change in local storage. When the storage event is triggered, tabs can read the new message from local storage and react accordingly, for example, by updating their user interface.",image:""}],o={tittle:!1,limit:!0,style:{borderTop:"2px solid white",borderBottom:"none"}},i={data:e,bannerImage:t,contentTitle:a,sections:s,researchProps:o};export{t as bannerImage,a as contentTitle,e as data,i as default,o as researchProps,s as sections};
